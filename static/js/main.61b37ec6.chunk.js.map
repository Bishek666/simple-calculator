{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","slice","includes","eval","toString","calculate","takeAnswerValue","deleteLastValue","resetAll","addDigits","digits","i","unshift","onClick","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4qBAEA,SAASA,MACL,cAAwBC,oDAAS,IAAjC,2KAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,4KAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAcC,OACXF,IAAIG,MAAM,GAAGC,SAASF,QAAmB,KAATN,MAAiBI,IAAII,SAASF,QAAUF,IAAII,SAASR,KAAKO,OAAO,MAGtGN,QAAQD,KAAOM,OAEVF,IAAII,SAASF,QACdH,UAAUM,KAAKT,KAAOM,OAAOI,cAI/BC,UAAY,SAAZA,YACEX,MACAC,QAAQQ,KAAKT,MAAMU,aAQrBE,gBAAkB,WAChBV,SAAWF,MACXC,QAAQC,SAIVW,gBAAkB,WACP,KAATb,MAIJC,QAAQD,KAAKO,MAAM,GAAI,KAGrBO,SAAW,WACA,KAATd,MAIJC,QAAQ,KAGNc,UAAY,WAGd,IAFA,IAAMC,EAAS,GADK,WAGXC,GACLD,EAAOE,QACH,qEAAQC,QAAS,kBAAMd,WAAWY,EAAEP,aAApC,SACKO,GADiDA,KAFrDA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAQT,OAAOD,GAEX,OACI,mEAAKI,UAAU,uBAAf,UACI,mEAAKA,UAAU,sBAAf,UACI,kEAAKA,UAAU,mBAAf,SAAmCpB,MAAQ,MAC3C,mEAAKoB,UAAU,cAAf,iBAAkClB,OAAS,kFAAQA,OAAR,OAA0B,SAEzE,mEAAKkB,UAAU,eAAf,UACI,mEAAKA,UAAU,SAAf,UACKL,YACD,qEAAQI,QAAS,kBAAMd,WAAW,MAAlC,eACA,qEAAQc,QAAS,kBAAMd,WAAW,MAAMe,UAAU,mBAAlD,kBAIJ,mEAAKA,UAAU,YAAf,UACI,qEAAQD,QAAS,kBAAMN,mBAAmBO,UAAU,0BAApD,iBAGA,qEAAQD,QAAS,kBAAML,YAAYM,UAAU,6BAA7C,gBAGA,qEAAQD,QAAS,kBAAMd,WAAW,MAAlC,eACA,qEAAQc,QAAS,kBAAMd,WAAW,MAAlC,eACA,qEAAQc,QAAS,kBAAMd,WAAW,MAAlC,eACA,qEAAQc,QAAS,kBAAMd,WAAW,MAAlC,eACA,qEAAQc,QAASP,gBAAiBQ,UAAU,4BAA5C,iBAGA,qEAAQD,QAASR,UAAjB,wBAOLb,2B,+BCnGf,iEAKAuB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.61b37ec6.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n    const [calc, setCalc] = useState('');\n    const [result, setResult] = useState('');\n\n    const ops = ['+', '-', '.', '/', '*'];\n\n    const updateCalc = (value) => {\n        if ((ops.slice(3).includes(value) && calc === '') || (ops.includes(value) && ops.includes(calc.slice(-1)))) {\n            return;\n        }\n        setCalc(calc + value);\n\n        if (!ops.includes(value)) {\n            setResult(eval(calc + value).toString());\n        }\n    };\n\n    const calculate = () => {\n        if (calc) {\n            setCalc(eval(calc).toString());\n        }\n\n        if (!result && !calc === '') {\n            return;\n        }\n    };\n\n    const takeAnswerValue = () => {\n        if (result && !calc) {\n            setCalc(result);\n        }\n    };\n\n    const deleteLastValue = () => {\n        if (calc === '') {\n            return;\n        }\n\n        setCalc(calc.slice(0, -1));\n    };\n\n    const resetAll = () => {\n        if (calc === '') {\n            return;\n        }\n\n        setCalc('');\n    };\n\n    const addDigits = () => {\n        const digits = [];\n\n        for (let i = 1; i < 10; i++) {\n            digits.unshift(\n                <button onClick={() => updateCalc(i.toString())} key={i}>\n                    {i}\n                </button>\n            );\n        }\n\n        return digits;\n    };\n    return (\n        <div className='container-calculator'>\n            <div className='display-calculation'>\n                <div className='calculation-area'>{calc || '0'}</div>\n                <div className='answer-area'>Ans:{result ? <span>({result})</span> : ''}</div>\n            </div>\n            <div className='button-input'>\n                <div className='digits'>\n                    {addDigits()}\n                    <button onClick={() => updateCalc('0')}>0</button>\n                    <button onClick={() => updateCalc('.')} className='font-weight--600'>\n                        .\n                    </button>\n                </div>\n                <div className='operators'>\n                    <button onClick={() => deleteLastValue()} className='bg-red font-weight--600'>\n                        DEL\n                    </button>\n                    <button onClick={() => resetAll()} className='bg-orange font-weight--600'>\n                        AC\n                    </button>\n                    <button onClick={() => updateCalc('*')}>*</button>\n                    <button onClick={() => updateCalc('/')}>/</button>\n                    <button onClick={() => updateCalc('+')}>+</button>\n                    <button onClick={() => updateCalc('-')}>-</button>\n                    <button onClick={takeAnswerValue} className='bg-green font-weight--600'>\n                        Ans\n                    </button>\n                    <button onClick={calculate}>=</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}